-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


@package roki-web
@version 2.0.0.0

module Archives
data Archives k
Archives :: [(k, [Identifier])] -> (k -> Identifier) -> Dependency -> Archives k
[archivesMap] :: Archives k -> [(k, [Identifier])]
[archivesMakeId] :: Archives k -> k -> Identifier
[archivesDependency] :: Archives k -> Dependency
type YearlyArchives = Archives String
type MonthlyArchives = Archives (String, String)
archivesRules :: Archives a -> (a -> Pattern -> Rules ()) -> Rules ()
buildYearlyArchives :: (MonadMetadata m, MonadFail m) => TimeLocale -> TimeZone -> Pattern -> (String -> Identifier) -> m YearlyArchives
buildMonthlyArchives :: (MonadMetadata m, MonadFail m) => TimeLocale -> TimeZone -> Pattern -> ((String, String) -> Identifier) -> m MonthlyArchives

module Config.Program
contentsRoot :: FilePath
templatesRoot :: FilePath
tmBlogRoot :: FilePath
hakyllConfig :: Configuration
readerOptions :: ReaderOptions
writerOptions :: WriterOptions
writerPreviewOptions :: WriterOptions
tagSoupOption :: RenderOptions String

module Config.RegexUtils
yyyy :: FilePath
mm :: FilePath
dd :: FilePath

module Config.Site
siteName :: String
timeZoneJST :: TimeZone
defaultTimeLocale' :: TimeLocale
data GSuite
GSuite :: String -> String -> GSuite
[gCxPrefix] :: GSuite -> String
[gSiteVerifyKey] :: GSuite -> String
gSuiteConf :: GSuite
instance GHC.Show.Show Config.Site.GSuite

module Config.TopPage
data TopPageConfig
TopPageConfig :: Int -> String -> String -> TopPageConfig
[maxTitleNum] :: TopPageConfig -> Int
[postDateFormat] :: TopPageConfig -> String
[noPostsAlt] :: TopPageConfig -> String
topPageConfig :: TopPageConfig

module Contexts.Field
localDateField :: TimeLocale -> TimeZone -> String -> String -> Context a
tagsField' :: String -> Tags -> Context a
tagCloudField' :: String -> Tags -> Context a
descriptionField :: String -> Int -> Context String
imageField :: String -> Context String
yearMonthArchiveField :: String -> YearlyArchives -> MonthlyArchives -> Maybe String -> Context a
searchBoxResultField :: Context String

module Contexts.Field.RokiDiary.GAdsense
gAdSenseHeader :: Html ()
gAdSenseBeforeContentBody :: Html ()
gAdSenseFooter :: Html ()

module Contexts.Field.RokiDiary
font :: Html ()

module Contexts.Field.RokiLog.GAdsense
gAdSenseBeforeContentBody :: Html ()
gAdSenseFooter :: Html ()

module Contexts.Field.RokiLog.PowertedBy
haskellJpLogo :: Html ()

module Contexts.Field.RokiLog
gAdSenseBeforeContentBody :: Html ()
footerAdditionalComponent :: Html ()
font :: Html ()

module Contexts.Utils
metadataToListField :: String -> String -> Context String

module Hakyll.Web.Feed.Extra
data FeedConfiguration
FeedConfiguration :: String -> String -> String -> String -> String -> String -> FeedConfiguration
[feedTitle] :: FeedConfiguration -> String
[feedWebRoot] :: FeedConfiguration -> String
[feedBlogName] :: FeedConfiguration -> String
[feedDescription] :: FeedConfiguration -> String
[feedAuthorName] :: FeedConfiguration -> String
[feedAuthorEmail] :: FeedConfiguration -> String
renderRss :: FeedConfiguration -> Context String -> [Item String] -> Compiler (Item String)
renderAtom :: FeedConfiguration -> Context String -> [Item String] -> Compiler (Item String)
instance GHC.Classes.Eq Hakyll.Web.Feed.Extra.FeedConfiguration
instance GHC.Show.Show Hakyll.Web.Feed.Extra.FeedConfiguration

module Config.Blog
data BlogConfig m
BlogConfig :: Bool -> String -> String -> Html () -> Int -> Int -> Int -> Html () -> Html () -> Html () -> m Tags -> (FilePath -> FilePath) -> Pattern -> Pattern -> FeedConfiguration -> String -> m YearlyArchives -> m MonthlyArchives -> (FilePath -> FilePath) -> ((FilePath, FilePath) -> FilePath) -> WriterOptions -> String -> BlogConfig m
[blogIsPreview] :: BlogConfig m -> Bool
[blogName] :: BlogConfig m -> String
[blogDescription] :: BlogConfig m -> String
[blogFont] :: BlogConfig m -> Html ()
[blogPageEntriesNum] :: BlogConfig m -> Int
[blogPrevNextTitleMaxNum] :: BlogConfig m -> Int
[blogFeedRecentNum] :: BlogConfig m -> Int
[blogHeaderAdditional] :: BlogConfig m -> Html ()
[blogBeforeContentBodyAdditional] :: BlogConfig m -> Html ()
[blogFooterAdditional] :: BlogConfig m -> Html ()
[blogTagBuilder] :: BlogConfig m -> m Tags
[blogTagPagesPath] :: BlogConfig m -> FilePath -> FilePath
[blogEntryPattern] :: BlogConfig m -> Pattern
[blogEntryFilesPattern] :: BlogConfig m -> Pattern
[blogFeedConfig] :: BlogConfig m -> FeedConfiguration
[blogContentSnapshot] :: BlogConfig m -> String
[blogYearlyArchivesBuilder] :: BlogConfig m -> m YearlyArchives
[blogMonthlyArchivesBuilder] :: BlogConfig m -> m MonthlyArchives
[blogYearlyPagePath] :: BlogConfig m -> FilePath -> FilePath
[blogMonthlyPagePath] :: BlogConfig m -> (FilePath, FilePath) -> FilePath
[blogWriterOptions] :: BlogConfig m -> WriterOptions
[blogGoogleCx] :: BlogConfig m -> String

module Media.JS
compressJsCompiler :: Compiler (Item String)

module Media.SVG
optimizeSVGCompiler :: [String] -> Compiler (Item String)

module Media

module Rules.Blog.Type
type BlogConfReader m = ReaderT (BlogConfig m)

module Rules.Blog.Feed.Utils
buildFeed :: Snapshot -> String -> Context String -> Render -> BlogConfReader n Rules ()

module Rules.Blog.Feed.RSS
build :: Snapshot -> Context String -> BlogConfReader n Rules ()

module Rules.Blog.Feed.Atom
build :: Snapshot -> Context String -> BlogConfReader n Rules ()

module Rules.Blog.EachPosts.Utils
eachPostsSeries :: (Context String -> Rules ()) -> BlogConfReader m Rules ()

module Rules.Blog.EachPostSeries
eachPostsSeries :: (Context String -> Rules ()) -> BlogConfReader m Rules ()

module Rules.Blog.Utils
appendFooter :: (Binary a, Typeable a, Semigroup a) => String -> TimeLocale -> TimeZone -> Item a -> Compiler (Item a)

module Rules.Src.JavaScript
rules :: Rules ()

module Rules.Vendor
rules :: Bool -> Rules ()

module Utils.Base
mconcatM :: (Monad m, Monoid b) => [m b] -> m b

module Utils.Hakyll
absolutizeUrls :: Item String -> Compiler (Item String)
modifyExternalLinkAttr :: Item String -> Compiler (Item String)
sanitizeTagName :: String -> String
sanitizeDisqusName :: String -> String
makePageIdentifier :: FilePath -> PageNumber -> Identifier
getStringField :: String -> Context String -> Compiler (Maybe String)

module Utils

module Rules.Blog.Paginate.Utils
grouper :: (Monad m, MonadMetadata f, MonadFail f) => BlogConfReader n m ([Identifier] -> f [[Identifier]])
makeId :: Monad n => (BlogConfig m -> a -> FilePath) -> BlogConfReader m n (a -> PageNumber -> Identifier)
title :: String -> String -> String

module Config.Blogs.Utils
entryPattern :: String -> Pattern
entryFilesPattern :: String -> Pattern
contentSnapshot :: String -> Snapshot
tagPagesPath :: String -> FilePath -> FilePath
buildTags :: MonadMetadata m => String -> m Tags
yearlyPagePath :: String -> FilePath -> FilePath
buildYearlyArchives :: (MonadMetadata m, MonadFail m) => String -> m YearlyArchives
monthlyPagePath :: String -> (FilePath, FilePath) -> FilePath
buildMonthlyArchives :: (MonadMetadata m, MonadFail m) => String -> m MonthlyArchives

module Config.Blogs.TechBlog
blogName :: FilePath
blogDesc :: String
entryPattern :: Pattern
entryFilesPattern :: Pattern
feedConfig :: FeedConfiguration
contentSnapshot :: Snapshot
tagPagesPath :: FilePath -> FilePath
buildTags :: MonadMetadata m => m Tags
yearlyPagePath :: FilePath -> FilePath
buildYearlyArchives :: (MonadMetadata m, MonadFail m) => m YearlyArchives
monthlyPagePath :: (FilePath, FilePath) -> FilePath
buildMonthlyArchives :: (MonadMetadata m, MonadFail m) => m MonthlyArchives

module Config.Blogs.AnotherBlog
blogName :: FilePath
blogDesc :: String
entryPattern :: Pattern
entryFilesPattern :: Pattern
feedConfig :: FeedConfiguration
contentSnapshot :: Snapshot
tagPagesPath :: FilePath -> FilePath
buildTags :: MonadMetadata m => m Tags
yearlyPagePath :: FilePath -> FilePath
buildYearlyArchives :: (MonadMetadata m, MonadFail m) => m YearlyArchives
monthlyPagePath :: (FilePath, FilePath) -> FilePath
buildMonthlyArchives :: (MonadMetadata m, MonadFail m) => m MonthlyArchives

module Utils.Stack
getStackYaml :: IO (HashMap Text Value)
getPackageConfig :: IO DecodeResult
getProgNameV :: IO String

module Config.Contributions
renderProjectsList :: IO String
renderContributionsTable :: IO String
data GetPinnedRepos
GetPinnedRepos :: Maybe GetPinnedReposUser -> GetPinnedRepos
[$sel:user:GetPinnedRepos] :: GetPinnedRepos -> Maybe GetPinnedReposUser
data GetPinnedReposArgs
GetPinnedReposArgs :: Text -> GetPinnedReposArgs
[$sel:user:GetPinnedReposArgs] :: GetPinnedReposArgs -> Text
data GetPinnedReposUserPinnedItems
GetPinnedReposUserPinnedItems :: Maybe ([] (Maybe GetPinnedReposUserPinnedItemsNodes)) -> GetPinnedReposUserPinnedItems
[$sel:nodes:GetPinnedReposUserPinnedItems] :: GetPinnedReposUserPinnedItems -> Maybe ([] (Maybe GetPinnedReposUserPinnedItemsNodes))
data GetPinnedReposUserPinnedItemsNodes
GetPinnedReposUserPinnedItemsNodesVariantRepository :: GetPinnedReposUserPinnedItemsNodesRepository -> GetPinnedReposUserPinnedItemsNodes
GetPinnedReposUserPinnedItemsNodes :: GetPinnedReposUserPinnedItemsNodes
data GetPinnedReposUserPinnedItemsNodesRepository
GetPinnedReposUserPinnedItemsNodesRepository :: Text -> URI -> Text -> Maybe Text -> Int -> Maybe GetPinnedReposUserPinnedItemsNodesLanguages -> GetPinnedReposUserPinnedItemsNodesRepository
[$sel:__typename:GetPinnedReposUserPinnedItemsNodesRepository] :: GetPinnedReposUserPinnedItemsNodesRepository -> Text
[$sel:url:GetPinnedReposUserPinnedItemsNodesRepository] :: GetPinnedReposUserPinnedItemsNodesRepository -> URI
[$sel:name:GetPinnedReposUserPinnedItemsNodesRepository] :: GetPinnedReposUserPinnedItemsNodesRepository -> Text
[$sel:description:GetPinnedReposUserPinnedItemsNodesRepository] :: GetPinnedReposUserPinnedItemsNodesRepository -> Maybe Text
[$sel:stargazerCount:GetPinnedReposUserPinnedItemsNodesRepository] :: GetPinnedReposUserPinnedItemsNodesRepository -> Int
[$sel:languages:GetPinnedReposUserPinnedItemsNodesRepository] :: GetPinnedReposUserPinnedItemsNodesRepository -> Maybe GetPinnedReposUserPinnedItemsNodesLanguages
data GetPinnedReposUserPinnedItemsNodesLanguages
GetPinnedReposUserPinnedItemsNodesLanguages :: Maybe ([] (Maybe GetPinnedReposUserPinnedItemsNodesLanguagesNodes)) -> GetPinnedReposUserPinnedItemsNodesLanguages
[$sel:nodes:GetPinnedReposUserPinnedItemsNodesLanguages] :: GetPinnedReposUserPinnedItemsNodesLanguages -> Maybe ([] (Maybe GetPinnedReposUserPinnedItemsNodesLanguagesNodes))
data GetPinnedReposUserPinnedItemsNodesLanguagesNodes
GetPinnedReposUserPinnedItemsNodesLanguagesNodes :: Text -> Maybe Text -> GetPinnedReposUserPinnedItemsNodesLanguagesNodes
[$sel:name:GetPinnedReposUserPinnedItemsNodesLanguagesNodes] :: GetPinnedReposUserPinnedItemsNodesLanguagesNodes -> Text
[$sel:color:GetPinnedReposUserPinnedItemsNodesLanguagesNodes] :: GetPinnedReposUserPinnedItemsNodesLanguagesNodes -> Maybe Text
instance GHC.Classes.Eq Config.Contributions.GetPinnedReposUserPinnedItemsNodesLanguagesNodes
instance GHC.Show.Show Config.Contributions.GetPinnedReposUserPinnedItemsNodesLanguagesNodes
instance GHC.Generics.Generic Config.Contributions.GetPinnedReposUserPinnedItemsNodesLanguagesNodes
instance GHC.Classes.Eq Config.Contributions.GetPinnedReposUserPinnedItemsNodesLanguages
instance GHC.Show.Show Config.Contributions.GetPinnedReposUserPinnedItemsNodesLanguages
instance GHC.Generics.Generic Config.Contributions.GetPinnedReposUserPinnedItemsNodesLanguages
instance GHC.Classes.Eq Config.Contributions.GetPinnedReposUserPinnedItemsNodesRepository
instance GHC.Show.Show Config.Contributions.GetPinnedReposUserPinnedItemsNodesRepository
instance GHC.Generics.Generic Config.Contributions.GetPinnedReposUserPinnedItemsNodesRepository
instance GHC.Classes.Eq Config.Contributions.GetPinnedReposUserPinnedItemsNodes
instance GHC.Show.Show Config.Contributions.GetPinnedReposUserPinnedItemsNodes
instance GHC.Generics.Generic Config.Contributions.GetPinnedReposUserPinnedItemsNodes
instance GHC.Classes.Eq Config.Contributions.GetPinnedReposUserPinnedItems
instance GHC.Show.Show Config.Contributions.GetPinnedReposUserPinnedItems
instance GHC.Generics.Generic Config.Contributions.GetPinnedReposUserPinnedItems
instance GHC.Classes.Eq Config.Contributions.GetPinnedReposUser
instance GHC.Show.Show Config.Contributions.GetPinnedReposUser
instance GHC.Generics.Generic Config.Contributions.GetPinnedReposUser
instance GHC.Classes.Eq Config.Contributions.GetPinnedRepos
instance GHC.Show.Show Config.Contributions.GetPinnedRepos
instance GHC.Generics.Generic Config.Contributions.GetPinnedRepos
instance GHC.Classes.Eq Config.Contributions.GetPinnedReposArgs
instance GHC.Show.Show Config.Contributions.GetPinnedReposArgs
instance GHC.Generics.Generic Config.Contributions.GetPinnedReposArgs
instance Data.Morpheus.Client.Fetch.RequestType.RequestType Config.Contributions.GetPinnedRepos
instance Data.Aeson.Types.ToJSON.ToJSON Config.Contributions.GetPinnedReposArgs
instance Data.Aeson.Types.FromJSON.FromJSON Config.Contributions.GetPinnedRepos
instance Data.Aeson.Types.FromJSON.FromJSON Config.Contributions.GetPinnedReposUser
instance Data.Aeson.Types.FromJSON.FromJSON Config.Contributions.GetPinnedReposUserPinnedItems
instance Data.Aeson.Types.FromJSON.FromJSON Config.Contributions.GetPinnedReposUserPinnedItemsNodes
instance Data.Aeson.Types.FromJSON.FromJSON Config.Contributions.GetPinnedReposUserPinnedItemsNodesRepository
instance Data.Aeson.Types.FromJSON.FromJSON Config.Contributions.GetPinnedReposUserPinnedItemsNodesLanguages
instance Data.Aeson.Types.FromJSON.FromJSON Config.Contributions.GetPinnedReposUserPinnedItemsNodesLanguagesNodes
instance GHC.Show.Show Config.Contributions.Date
instance GHC.Generics.Generic Config.Contributions.Date
instance GHC.Show.Show Config.Contributions.Project
instance GHC.Generics.Generic Config.Contributions.Project
instance GHC.Show.Show Config.Contributions.Contribute
instance GHC.Generics.Generic Config.Contributions.Contribute
instance Dhall.Marshal.Decode.FromDhall Config.Contributions.Contribute
instance Dhall.Marshal.Decode.FromDhall Config.Contributions.Project
instance Dhall.Marshal.Decode.FromDhall Config.Contributions.Date

module Config

module Rules.Src.Style
rules :: Rules ()

module Rules.Media
rules :: Rules ()

module Contexts.Core
dateCtx :: Context String
jsPathCtx :: Context String
siteMapDateCtx :: Context String
siteCtx :: Context String

module Contexts.Blog
title :: Monad m => BlogConfReader n m (Context String)
font :: Monad m => BlogConfReader n m (Context String)
description :: Monad m => BlogConfReader n m (Context String)
beforeContentBodyAdditionalComponent :: Monad m => BlogConfReader n m (Context String)
headerAdditionalComponent :: Monad m => BlogConfReader n m (Context String)
footerAdditionalComponent :: Monad m => BlogConfReader n m (Context String)
tagCloud :: Monad m => BlogConfReader m m (Context a)
gSuite :: Monad m => BlogConfReader n m (Context String)
disqus :: Monad m => BlogConfReader n m (Context String)
katexJsCtx :: Monad m => BlogConfReader n m (Context String)
postCtx :: Monad m => Tags -> BlogConfReader n m (Context String)
listCtx :: Monad m => BlogConfReader n m (Context String)

module Contexts

module Rules.Blog.Sitemap
build :: Snapshot -> BlogConfReader m Rules ()

module Rules.Blog.Footer
build :: Tags -> YearlyArchives -> MonthlyArchives -> BlogConfReader m Rules ()

module Vendor.FontAwesome.Core
type FontAwesomeIcons = HashMap String (HashMap String Elem)
fontAwesome :: FontAwesomeIcons -> String -> String -> Maybe (TagTree String)
loadFontAwesome :: IO (Maybe FontAwesomeIcons)
instance GHC.Show.Show Vendor.FontAwesome.Core.Elem
instance Data.Aeson.Types.FromJSON.FromJSON Vendor.FontAwesome.Core.Elem

module Vendor.FontAwesome.Compiler
render :: FontAwesomeIcons -> Item String -> Compiler (Item String)

module Vendor.FontAwesome

module Rules.Blog.Search
build :: FontAwesomeIcons -> Context String -> BlogConfReader m Rules ()

module Rules.Blog.ListPage
listPage :: Maybe String -> FontAwesomeIcons -> Tags -> ListPageOpts -> Paginate -> Rules ()
data ListPageOpts
ListPageOpts :: Context String -> String -> Context String -> Context String -> Context String -> Context String -> Snapshot -> Context String -> Context String -> Context String -> ListPageOpts
[lpName] :: ListPageOpts -> Context String
[lpTitle] :: ListPageOpts -> String
[lpFont] :: ListPageOpts -> Context String
[lpDescription] :: ListPageOpts -> Context String
[lpBeforeContentBodyAdditionalComponent] :: ListPageOpts -> Context String
[lpHeaderAdditionalComponent] :: ListPageOpts -> Context String
[lpContentSnapshot] :: ListPageOpts -> Snapshot
[lpGSuite] :: ListPageOpts -> Context String
[lpList] :: ListPageOpts -> Context String
[lpPost] :: ListPageOpts -> Context String

module Rules.Blog.Paginate.YearlyPosts
build :: FontAwesomeIcons -> Tags -> ListPageOpts -> BlogConfReader Rules Rules YearlyArchives

module Rules.Blog.Paginate.TaggedPosts
build :: FontAwesomeIcons -> Tags -> ListPageOpts -> BlogConfReader n Rules ()

module Rules.Blog.Paginate.MonthlyPosts
build :: FontAwesomeIcons -> Tags -> ListPageOpts -> BlogConfReader Rules Rules MonthlyArchives

module Rules.Blog.Index
build :: FontAwesomeIcons -> Tags -> ListPageOpts -> BlogConfReader m Rules ()

module Vendor.KaTeX
type KaTeXRender = Item String -> Compiler (Item String)
render :: KaTeXRender

module Rules.PageType
data PageConf
PageConf :: WriterOptions -> KaTeXRender -> FontAwesomeIcons -> PageConf
[pcWriterOpt] :: PageConf -> WriterOptions
[pcKaTeXRender] :: PageConf -> KaTeXRender
[pcFaIcons] :: PageConf -> FontAwesomeIcons
type PageConfReader = ReaderT PageConf

module Rules.TopPage
rules :: [BlogConfig m] -> PageConfReader Rules ()

module Rules.Resume
rules :: PageConfReader Rules ()

module Rules.Blog.EachPosts
build :: FontAwesomeIcons -> Context String -> BlogConfReader m Rules Snapshot

module Rules.Blog.Core
data BlogConfig m
BlogConfig :: Bool -> String -> String -> Html () -> Int -> Int -> Int -> Html () -> Html () -> Html () -> m Tags -> (FilePath -> FilePath) -> Pattern -> Pattern -> FeedConfiguration -> String -> m YearlyArchives -> m MonthlyArchives -> (FilePath -> FilePath) -> ((FilePath, FilePath) -> FilePath) -> WriterOptions -> String -> BlogConfig m
[blogIsPreview] :: BlogConfig m -> Bool
[blogName] :: BlogConfig m -> String
[blogDescription] :: BlogConfig m -> String
[blogFont] :: BlogConfig m -> Html ()
[blogPageEntriesNum] :: BlogConfig m -> Int
[blogPrevNextTitleMaxNum] :: BlogConfig m -> Int
[blogFeedRecentNum] :: BlogConfig m -> Int
[blogHeaderAdditional] :: BlogConfig m -> Html ()
[blogBeforeContentBodyAdditional] :: BlogConfig m -> Html ()
[blogFooterAdditional] :: BlogConfig m -> Html ()
[blogTagBuilder] :: BlogConfig m -> m Tags
[blogTagPagesPath] :: BlogConfig m -> FilePath -> FilePath
[blogEntryPattern] :: BlogConfig m -> Pattern
[blogEntryFilesPattern] :: BlogConfig m -> Pattern
[blogFeedConfig] :: BlogConfig m -> FeedConfiguration
[blogContentSnapshot] :: BlogConfig m -> String
[blogYearlyArchivesBuilder] :: BlogConfig m -> m YearlyArchives
[blogMonthlyArchivesBuilder] :: BlogConfig m -> m MonthlyArchives
[blogYearlyPagePath] :: BlogConfig m -> FilePath -> FilePath
[blogMonthlyPagePath] :: BlogConfig m -> (FilePath, FilePath) -> FilePath
[blogWriterOptions] :: BlogConfig m -> WriterOptions
[blogGoogleCx] :: BlogConfig m -> String
rules :: FontAwesomeIcons -> BlogConfReader Rules Rules ()

module Rules.Blog
